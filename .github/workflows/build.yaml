name: Build and Release Electron App

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-and-release:
    # a matrix so we build on both macOS and Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        arch: [x64] # you can add arm64 on macos if you like

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # give the action the PAT under GITHUB_TOKEN

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install deps
        run: npm install

      - name: Build app (${{ matrix.os }})
        # disable electron-builderâ€™s own publish
        run: npm run dist -- --publish never

      - name: Upload artifact (for Actions debugging)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: dist/*.exe

      - name: Upload artifact (for Actions debugging)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: mac-installer
          path: dist/*.dmg

  release:
    needs: build-and-release
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Create or update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/*.dmg
            dist/*.exe
          token: ${{ secrets.GH_TOKEN }}
